"use strict";
// let num = 9;
const arr = [10, 13, 2, 26, 8];
arr.sort(compareNum);
console.log(arr);

function compareNum(a, b) {
  return a - b;
}

// arr[99] = 0;
// console.log(arr.length);
// console.log(arr);

// последний идекс массива +1

// // Удаляет последний эллемент из массива
// arr.pop();
// console.log(arr);

// //  Добавляет эллемент в конец массива (все что положим в скобки: числа буквы переменные)
// arr.push(num);
// console.log(arr);

// // Перебор эллементов внутри массива цикл for
// for (let i = 0; i < arr.length; i++) {
//   console.log(arr[i]);
// }

// // Перебор эллементов внутри массива цикл for of
// // работает только с массивами, а с объектами не работает
// for (let value of arr) {
//   console.log(value);
// }

// arr.forEach(function (item, i, arr) {
//   console.log(`${i + 1}: ${item} внутри массива ${arr}`);
// });

// item - внутренние эллементы массива
// i - номер по порядку
// arr - ссылка та тот Массив к которому мы обращаемся

// отличие foreach от forof в том что мы не можем в foreach использовать
// break continue

// // из строки в массив
// const str = prompt("", "");
// const products = str.split(", ");
// // Сортирует  массив но элементы берет как строки, проблемы будут если в массиве будут числа
// products.sort();
// // Из массива в строку
// console.log(products.join("; "));

// Подмассив отличается от массива тем что в нем нету методов( поп пуш фор форич и тд)
// когда мы работаем с эллементами на странице то мы будем получать псевдомассивы
// это такой объект структкра которого совпадает со структурой массива
// и выглядит также как обычный массив просто структура которая хранит данные по порядку
